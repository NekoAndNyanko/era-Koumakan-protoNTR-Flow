;--------------------------------------------------------------------
;続柄を出力
;続柄.ERHに続柄_のBIT位置と間柄_のマクロ定義

@TUDUKIGARA_OUTPUT_ALL(当人 ,相手)
#FUNCTIONS
#DIM 当人
#DIM 相手
#DIM 多生児人数
#DIM 多生児の兄弟判定

;PRINTFORM {間柄_相手父},{間柄_相手母},{CHARANUM}

LOCAL = TUDUKIGARA_CHECK(当人,相手)
LOCALS = 

SIF LOCAL == 0
	RETURNF LOCALS

IF GETBIT(LOCAL,続柄_本人)
	LOCALS += "[本人]"
	RETURNF LOCALS
ENDIF

;1親等
;親
SIF GETBIT(LOCAL,続柄_父)
	LOCALS += "[父]"
SIF GETBIT(LOCAL,続柄_母)
	LOCALS += "[母]"

;子
IF GETBIT(LOCAL,続柄_子)
	LOCALS += "[" + \@ GETBIT(TALENT:相手:性別,0) ?娘#息子\@ + "]"
ENDIF

;2親等
;兄弟姉妹
IF GETBIT(LOCAL,続柄_兄姉) || GETBIT(LOCAL,続柄_弟妹)
	LOCALS += "["
	多生児人数 = 0
	IF CFLAG:当人:多生児兄弟フラグ > 0 && CFLAG:当人:多生児兄弟フラグ == CFLAG:相手:多生児兄弟フラグ
		FOR 多生児の兄弟判定, 0, CHARANUM
			SIF CHILDREM_CHECK(多生児の兄弟判定) && CFLAG:当人:多生児兄弟フラグ == CFLAG:多生児の兄弟判定:多生児兄弟フラグ
				多生児人数 ++
		NEXT
		;多生児表記は対象だけ
		SELECTCASE 多生児人数
			CASE 2
				LOCALS += "双"
			CASE 3
				LOCALS += "三つ"
			CASE 4
				LOCALS += "四つ"
			CASE 5
				LOCALS += "五つ"
			CASE 6
				LOCALS += "六つ"
			CASE 7
				LOCALS += "七つ"
			CASE 8
				LOCALS += "八つ"
		ENDSELECT
		LOCALS += "子"
		SIF 間柄_実父 != 間柄_相手父
			LOCALS += "/異父"
	ELSEIF 間柄_実父 == 間柄_相手父 && (間柄_実父 == 人物_客 || 間柄_実父 == 人物_村人) && 多生児人数 == 0
		LOCALS += "異父？"
	ELSEIF 間柄_実父 != 間柄_相手父
		LOCALS += "異父"
	ELSEIF 間柄_実母 != 間柄_相手母
		LOCALS += "異母"
	ENDIF
	SIF GETBIT(LOCAL,続柄_兄姉)
		LOCALS += \@ GETBIT(TALENT:相手:性別,0) ?姉#兄\@
	SIF GETBIT(LOCAL,続柄_弟妹)
		LOCALS += \@ GETBIT(TALENT:相手:性別,0) ?妹#弟\@
	LOCALS += "]"
ENDIF

;祖父母
SIF GETBIT(LOCAL,続柄_祖父)
	LOCALS += "[祖父]"
SIF GETBIT(LOCAL,続柄_祖母)
	LOCALS += "[祖母]"

;孫
SIF GETBIT(LOCAL,続柄_孫)
	LOCALS += "[" + \@ GETBIT(TALENT:相手:性別,0) ?孫娘#孫\@ + "]"

;3親等
;曾祖父母
SIF GETBIT(LOCAL,続柄_曽祖父)
	LOCALS += "[曽祖父]"
SIF GETBIT(LOCAL,続柄_曽祖母)
	LOCALS += "[曽祖母]"

;曾孫
SIF GETBIT(LOCAL,続柄_曽孫)
	LOCALS += "[曽孫]"

;伯叔父母
SIF GETBIT(LOCAL,続柄_伯父母)
	LOCALS += "[伯" + \@ GETBIT(TALENT:相手:性別,0) ?母#父\@ + "]"
SIF GETBIT(LOCAL,続柄_叔父母)
	LOCALS += "[叔" + \@ GETBIT(TALENT:相手:性別,0) ?母#父\@ + "]"

;甥姪
SIF GETBIT(LOCAL,続柄_甥姪)
	LOCALS += "[" + \@ GETBIT(TALENT:相手:性別,0) ?姪#甥\@ + "]"

;4親等
;高祖父母
SIF GETBIT(LOCAL,続柄_高祖父)
	LOCALS += "[高祖父]"
SIF GETBIT(LOCAL,続柄_高祖母)
	LOCALS += "[高祖母]"

;玄孫
SIF GETBIT(LOCAL,続柄_玄孫)
	LOCALS += "[玄孫]"

;従兄弟姉妹
IF GETBIT(LOCAL,続柄_従兄姉) || GETBIT(LOCAL,続柄_従弟妹)
	LOCALS += "[従"
	SIF GETBIT(LOCAL,続柄_従兄姉)
		LOCALS += \@ GETBIT(TALENT:相手:性別,0) ?姉#兄\@
	SIF GETBIT(LOCAL,続柄_従弟妹)
		LOCALS += \@ GETBIT(TALENT:相手:性別,0) ?妹#弟\@
	LOCALS += "]"
ENDIF

;5親等
;高祖父母の親
SIF GETBIT(LOCAL,続柄_高祖父母の父) || GETBIT(LOCAL,続柄_高祖父母の母)
	LOCALS += "[五世の祖]"

;耳孫
SIF GETBIT(LOCAL,続柄_来孫)
	LOCALS += "[来孫]"

;6親等
;高祖父母の祖父母
SIF GETBIT(LOCAL,続柄_高祖父母の祖父) || GETBIT(LOCAL,続柄_高祖父母の祖母)
	LOCALS += "[六世の祖]"

;昆孫
SIF GETBIT(LOCAL,続柄_昆孫)
	LOCALS += "[昆孫]"

;7親等
;仍孫
SIF GETBIT(LOCAL,続柄_仍孫)
	LOCALS += "[仍孫]"

;8親等
;雲孫
SIF GETBIT(LOCAL,続柄_雲孫)
	LOCALS += "[雲孫]"

;祖先
IF GETBIT(LOCAL,続柄_祖先)
	LOCALS += "[祖先]"
	;子孫
ELSEIF GETBIT(LOCAL,続柄_子孫)
	LOCALS += "[子孫]"
ENDIF

RETURNF LOCALS


;続柄のBITを立てて返します 
@TUDUKIGARA_CHECK(当人 ,相手)
#FUNCTION
#DIM 当人
#DIM 相手

LOCAL = 0

IF 当人 == 相手
	SETBIT LOCAL,続柄_本人 
	RETURNF LOCAL
ENDIF

;尊属
LOCAL |= SONZOKU_CHECK(当人, 相手)

;卑属
LOCAL |= HIZOKU_CHECK(当人, 相手)

;傍系
LOCAL |= BOUKEI_CHECK(当人, 相手)

;傍系尊属
;伯叔父母
IF CHILDREM_CHECK(当人)
	IF CHILDREM_CHECK(相手)
		IF CHILDREM_CHECK(間柄_実父)
			IF 間柄_父方祖父 == 間柄_相手父 || 間柄_父方祖父 == 間柄_相手母 || 間柄_父方祖母 == 間柄_相手父 || 間柄_父方祖母 == 間柄_相手母
				IF 間柄_実父 > 相手
					SETBIT LOCAL,続柄_伯父母
				ELSE
					SETBIT LOCAL,続柄_叔父母
				ENDIF
			ENDIF
		ENDIF
		IF CHILDREM_CHECK(間柄_実母)
			IF 間柄_母方祖父 == 間柄_相手父 || 間柄_母方祖父 == 間柄_相手母 || 間柄_母方祖母 == 間柄_相手父 || 間柄_母方祖母 == 間柄_相手母
				IF 間柄_実母 > 相手
					SETBIT LOCAL,続柄_伯父母
				ELSE
					SETBIT LOCAL,続柄_叔父母
				ENDIF
			ENDIF
		ENDIF
	ELSEIF (間柄_実父 == 人物_蕾米莉亚 || 間柄_実母 == 人物_蕾米莉亚) && 相手 == 人物_芙兰朵露
		SETBIT LOCAL,続柄_叔父母
	ELSEIF (間柄_実父 == 人物_芙兰朵露 || 間柄_実母 == 人物_芙兰朵露) && 相手 == 人物_蕾米莉亚
		SETBIT LOCAL,続柄_伯父母
	ENDIF
ENDIF

;傍系卑属
;甥姪
IF CHILDREM_CHECK(相手)
	IF CHILDREM_CHECK(当人)
		IF CHILDREM_CHECK(間柄_相手父)
			IF 間柄_実父 == 間柄_相手父方祖父 || 間柄_実父 == 間柄_相手父方祖母 || 間柄_実母 == 間柄_相手父方祖父 || 間柄_実母 == 間柄_相手父方祖母
				SETBIT LOCAL,続柄_甥姪
			ENDIF
		ENDIF
		IF CHILDREM_CHECK(間柄_相手母)
			IF 間柄_実父 == 間柄_相手母方祖父 || 間柄_実父 == 間柄_相手母方祖母 || 間柄_実母 == 間柄_相手母方祖父 || 間柄_実母 == 間柄_相手母方祖母
				SETBIT LOCAL,続柄_甥姪
			ENDIF
		ENDIF
	ELSEIF 当人 == 人物_蕾米莉亚 && (間柄_相手父 == 人物_芙兰朵露 || 間柄_相手母 == 人物_芙兰朵露)
		SETBIT LOCAL,続柄_甥姪
	ELSEIF 当人 == 人物_芙兰朵露 && (間柄_相手父 == 人物_蕾米莉亚 || 間柄_相手母 == 人物_蕾米莉亚)
		SETBIT LOCAL,続柄_甥姪
	ENDIF
ENDIF

RETURNF LOCAL


;尊属判定	父方祖父==母方祖母、母方祖父==父方祖母の可能性があるため複数判定
@SONZOKU_CHECK(判定対象, 相手, 親等判定=0, 親等=1)
#FUNCTION
#DIM DYNAMIC 判定対象
#DIM DYNAMIC 相手
#DIM DYNAMIC 親等判定
#DIM DYNAMIC 親等
LOCAL = 親等判定

IF CHILDREM_CHECK(判定対象)
	IF 親等 <= 尊属探索_上限

		;PRINTFORML
		;PRINTFORM 尊属_親等{親等},対象{判定対象},父{CFLAG:判定対象:父親},母{CFLAG:判定対象:母親},相手{相手}

		SIF CFLAG:判定対象:父親 == 相手
			SETBIT LOCAL,(続柄_尊属_父 + 親等)
		SIF CFLAG:判定対象:母親 == 相手
			SETBIT LOCAL,(続柄_尊属_母 + 親等)

		LOCAL |= SONZOKU_CHECK(CFLAG:判定対象:父親, 相手, LOCAL, 親等 + 1)
		LOCAL |= SONZOKU_CHECK(CFLAG:判定対象:母親, 相手, LOCAL, 親等 + 1)
	ELSEIF LOCAL == 0
		IF CFLAG:判定対象:父親 == 相手 || CFLAG:判定対象:母親 == 相手
			SETBIT LOCAL,(続柄_祖先)
		ELSE
			LOCAL |= SONZOKU_CHECK(CFLAG:判定対象:父親, 相手, LOCAL, 尊属探索_上限 + 1)
			LOCAL |= SONZOKU_CHECK(CFLAG:判定対象:母親, 相手, LOCAL, 尊属探索_上限 + 1)
		ENDIF
	ENDIF
ENDIF

SIF 親等 == 1 && LOCAL != (1 << 続柄_祖先)
	CLEARBIT LOCAL, 続柄_祖先
RETURNF LOCAL


;卑属判定
@HIZOKU_CHECK(当人, 判定対象, 親等判定=0, 親等=1)
#FUNCTION
#DIM DYNAMIC 当人
#DIM DYNAMIC 判定対象
#DIM DYNAMIC 親等判定
#DIM DYNAMIC 親等
LOCAL = 親等判定

IF CHILDREM_CHECK(判定対象)
	IF 親等 <= 卑属探索_上限

		;PRINTFORML
		;PRINTFORM 卑属_親等{親等},当人{当人},対象{判定対象},父{CFLAG:判定対象:父親},母{CFLAG:判定対象:母親}

		SIF 当人 == CFLAG:判定対象:父親 || 当人 == CFLAG:判定対象:母親
			SETBIT LOCAL,(続柄_卑属 + 親等)

		LOCAL |= HIZOKU_CHECK(当人, CFLAG:判定対象:父親, LOCAL, 親等 + 1)
		LOCAL |= HIZOKU_CHECK(当人, CFLAG:判定対象:母親, LOCAL, 親等 + 1)
	ELSEIF LOCAL == 0
		IF 当人 == CFLAG:判定対象:父親 || 当人 == CFLAG:判定対象:母親
			SETBIT LOCAL,(続柄_子孫)
		ELSE
			LOCAL |= HIZOKU_CHECK(当人, CFLAG:判定対象:父親, LOCAL, 卑属探索_上限 + 1)
			LOCAL |= HIZOKU_CHECK(当人, CFLAG:判定対象:母親, LOCAL, 卑属探索_上限 + 1)
		ENDIF
	ENDIF
ENDIF

SIF 親等 == 1 && LOCAL != (1 << 続柄_子孫)
	CLEARBIT LOCAL, 続柄_子孫
RETURNF LOCAL


;傍系
;傍系探索_上限に2を設定すれば従兄弟も表示されるはず
@BOUKEI_CHECK(当人, 相手, 親等判定=0, 親等=1, 判定対象1=-1, 判定対象2=-1)
#FUNCTION
#DIM 当人
#DIM 相手
#DIM DYNAMIC 親等判定
#DIM DYNAMIC 親等
#DIM DYNAMIC 判定対象1
#DIM DYNAMIC 判定対象2
LOCAL = 親等判定
IF 判定対象1 == -1 && 判定対象2 == -1
	判定対象1 = 当人
	判定対象2 = 相手
ENDIF

IF 親等 <= 傍系探索_上限 && 判定対象1 != 判定対象2 && !(GETBIT(LOCAL,(続柄_兄姉 + ((親等 - 1) * 2)))) && !(GETBIT(LOCAL,(続柄_弟妹 + ((親等 - 1) * 2))))
	IF CHILDREM_CHECK(判定対象1) && CHILDREM_CHECK(判定対象2)

		;PRINTFORML
		;PRINTFORML 傍系_親等{(親等 * 2)},当人{当人},相手{相手}
		;PRINTFORM 　対象a{判定対象1},a父{CFLAG:判定対象1:父親},a母{CFLAG:判定対象1:母親},対象b{判定対象2},b父{CFLAG:判定対象2:父親},b母{CFLAG:判定対象2:母親}

		IF CFLAG:判定対象1:父親 == CFLAG:判定対象2:父親 || CFLAG:判定対象1:父親 == CFLAG:判定対象2:母親 || CFLAG:判定対象1:母親 == CFLAG:判定対象2:父親 || CFLAG:判定対象1:母親 == CFLAG:判定対象2:母親
			IF 当人 > 相手
				SETBIT LOCAL,(続柄_兄姉 + ((親等 - 1) * 2))
			ELSE
				SETBIT LOCAL,(続柄_弟妹 + ((親等 - 1) * 2))
			ENDIF
		ENDIF
		IF 親等 < 傍系探索_上限 && !(GETBIT(LOCAL,(続柄_兄姉 + ((親等 - 1) * 2)))) && !(GETBIT(LOCAL,(続柄_弟妹 + ((親等 - 1) * 2))))
			LOCAL |= BOUKEI_CHECK(当人, 相手, LOCAL, 親等 + 1, CFLAG:判定対象1:父親, CFLAG:判定対象2:父親)
			LOCAL |= BOUKEI_CHECK(当人, 相手, LOCAL, 親等 + 1, CFLAG:判定対象1:父親, CFLAG:判定対象2:母親)
			LOCAL |= BOUKEI_CHECK(当人, 相手, LOCAL, 親等 + 1, CFLAG:判定対象1:母親, CFLAG:判定対象2:父親)
			LOCAL |= BOUKEI_CHECK(当人, 相手, LOCAL, 親等 + 1, CFLAG:判定対象1:母親, CFLAG:判定対象2:母親)
		ENDIF
	ELSE
		IF 判定対象1 == 人物_蕾米莉亚 && 判定対象2 == 人物_芙兰朵露
			SETBIT LOCAL,(続柄_弟妹 + ((親等 - 1) * 2))
		ELSEIF 判定対象1 == 人物_芙兰朵露 && 判定対象2 == 人物_蕾米莉亚
			SETBIT LOCAL,(続柄_兄姉 + ((親等 - 1) * 2))
		ENDIF
	ENDIF
ENDIF

RETURNF LOCAL


;キャラ番号が子供(娘、息子)かであることを判定
@CHILDREM_CHECK(ARG)
#FUNCTION
SIF ARG >= CHARANUM
	RETURNF 0
SIF NO:ARG == 148 || NO:ARG == 149
	RETURNF 1
RETURNF 0
